Descripcion del problema
  
  Convex Hull es un problema que debemos resolver, en si, son datos esparcidos en el plano (x, y)
  Estos datos pueden ser encerrados de manera eficaz utilizando lineas rectas y como puntos de referencia los datos con las cordenadas mas lejanas
  Por ejemplo, el dato que tenga la X mayor y menor, y el que tena la Y mayor y menor
  Una vez con estos datos, se compararan los angulos que se generan entre el punto izquierdo con el superior, y el punto izquiero con el punto X
  Si el angulo de A con B es menos que el de A con X, entonces X debe ser agregado

Descripcion de herramientas:

  AnnData se usa especificamente para matrices y representar obserbaciones en un plano (x, y)
  UMAP Uniform Manifold Approximation and Projection, en español Aproximación y proyección de colectores uniformes, sirve para mostrar los datos en un mapa

Las librerias que seran utilizadas son:
"""
!pip install umap-learn
!pip install anndata
!pip install matplotlib
!pip install scipy
"""
  import anndata as ad
  import matplotlib.pyplot as plt
  from scipy.spatial import ConvexHull
  import numpy as np
  import umap
  import pandas as pd
  from matplotlib.patches import Polygon

  
adata = ad.read_h5ad("/content/AnalisisAlgoritmos/RedNeuronal.h5ad")
umap_coords = adata.obsm['X_UMAP']
cluster_id = adata.obs['cluster_id']

color = {
    37: '#914F1E',  # Cafe
    38: '#2F3645',  # Azul marino
    39: '#7C00FE',  # Morado fosforescente
    41: '#d62728',  # Rojo
    42: '#000000',  # Negro
    43: '#CCFFBD',  # verde Aqua
    75: '#e377c2'   # Rosa
}

print(adata,'\n', umap_coords,'\n',cluster_id)

plt.figure(figsize=(10,8))
for cluster in np.unique(cluster_id):
    cluster_points = umap_coords[cluster_id == cluster]
    plt.scatter(cluster_points[:, 0], cluster_points[:, 1], label=f'Cluster {cluster}', color=colors[cluster],s=9)
    
    if len(cluster_points) >=3:
        hull = ConvexHull(cluster_points)
        for simplex in hull.simplices:
            plt.plot(cluster_points[simplex, 0], cluster_points[simplex, 1], 'k-')

plt.title('Clusters con Hulls Convexos')
plt.xlabel('UMAP 1')
plt.ylabel('UMAP 2')
plt.legend()
plt.show()
